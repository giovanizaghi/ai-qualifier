# Backup Service for AI Qualifier
# This docker-compose file extends the main production setup with backup capabilities

version: '3.8'

services:
  backup:
    build:
      context: .
      dockerfile: docker/Dockerfile.backup
    container_name: ai-qualifier-backup
    depends_on:
      - database
      - redis
    environment:
      # Database connection
      - PGHOST=database
      - PGPORT=5432
      - PGDATABASE=${PGDATABASE:-ai_qualifier}
      - PGUSER=${PGUSER:-postgres}
      - PGPASSWORD=${PGPASSWORD}
      
      # Backup configuration
      - BACKUP_DIR=/backups
      - BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY}
      - ENABLE_ENCRYPTION=true
      - ENABLE_COMPRESSION=true
      - RETENTION_DAYS=30
      
      # Cloud storage
      - AWS_S3_BACKUP_BUCKET=${AWS_S3_BACKUP_BUCKET}
      - AWS_S3_REGION=${AWS_S3_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      
      # Notifications
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      
      # Monitoring
      - ENABLE_MONITORING=true
      - METRICS_ENDPOINT=http://prometheus:9090
      
    volumes:
      # Backup storage
      - backup_data:/backups
      - backup_logs:/var/log
      
      # Configuration files
      - ./config/backup.conf:/etc/ai-qualifier/backup.conf:ro
      - ./scripts/backup-manager.sh:/usr/local/bin/backup-manager.sh:ro
      - ./scripts/backup-hooks:/usr/local/bin/backup-hooks:ro
      
      # Docker socket for container management (if needed)
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
    networks:
      - ai-qualifier-network
      
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
          
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
        
    # Labels for monitoring and management
    labels:
      - "traefik.enable=false"  # Don't expose backup service
      - "backup.service=ai-qualifier"
      - "backup.type=postgresql"
      - "monitoring.enable=true"

  # Backup monitoring and metrics
  backup-exporter:
    image: prom/node-exporter:latest
    container_name: ai-qualifier-backup-exporter
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/var/lib/node_exporter/textfile_collector'
    volumes:
      - /:/host:ro,rslave
      - backup_metrics:/var/lib/node_exporter/textfile_collector
    networks:
      - ai-qualifier-network
    restart: unless-stopped
    labels:
      - "monitoring.scrape=true"
      - "monitoring.port=9100"

volumes:
  backup_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BACKUP_VOLUME_PATH:-./backups}
      
  backup_logs:
    driver: local
    
  backup_metrics:
    driver: local

networks:
  ai-qualifier-network:
    external: true